// Generated by CoffeeScript 1.6.1
(function() {
  var BaseModal, EndGameModal, animationsDelay, device, gameData, selectors, views,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseModal = require('./BaseModal');

  device = require('../../core/device');

  views = require('../../core/views');

  gameData = require('../../game/utils/gameData');

  animationsDelay = 600;

  selectors = {
    star: '.star'
  };

  /*
  ## End of Game Modal class
  
  Shown at the end of every game
  Displays a different set of elements and actions depending on the outcome of the game
  
  Read BaseModal for more
  */


  EndGameModal = (function(_super) {

    __extends(EndGameModal, _super);

    EndGameModal.prototype.templateName = 'modal-end-game';

    EndGameModal.prototype.classNames = 'modal-end-game';

    function EndGameModal(wrap, context, options) {
      var i, level, levels, nextLevel, _i, _len;
      this.wrap = wrap;
      this.context = context;
      if (options == null) {
        options = {};
      }
      this.game = options.game;
      this.starsCount = options.stars;
      this.levelName = options.levelName;
      levels = gameData.get('levels');
      nextLevel = null;
      for (i = _i = 0, _len = levels.length; _i < _len; i = ++_i) {
        level = levels[i];
        if (level.name === this.levelName) {
          if (levels[i + 1]) {
            this.nextLevel = levels[i + 1];
          }
          break;
        }
      }
      EndGameModal.__super__.constructor.apply(this, arguments);
    }

    EndGameModal.prototype.bind = function() {
      var _this = this;
      EndGameModal.__super__.bind.apply(this, arguments);
      this.inner.on(device.getEvent('click'), '[data-role="restart"]', function(e) {
        _this.game.restart();
        return e.preventDefault();
      });
      this.inner.on(device.getEvent('click'), '[data-role="next"]', function(e) {
        _this.openNextLevel();
        return e.preventDefault();
      });
      this.inner.on(device.getEvent('click'), '[data-role="back"]', function(e) {
        views.open('levels', 'slide-left');
        return e.preventDefault();
      });
      return this.addStars();
    };

    EndGameModal.prototype.openNextLevel = function() {
      return views.open('game', 'slide-right', null, false, this.nextLevel.name);
    };

    EndGameModal.prototype.addStars = function() {
      var i, _i, _ref, _results,
        _this = this;
      this.stars = this.inner.find(selectors.star);
      this.addedStars = 0;
      this.animatedStars = 0;
      _results = [];
      for (i = _i = 1, _ref = this.starsCount; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
        _results.push(setTimeout((function() {
          return _this.addStar();
        }), animationsDelay / 3 * (i - 1)));
      }
      return _results;
    };

    EndGameModal.prototype.addStar = function() {
      var el,
        _this = this;
      el = this.stars.eq(this.addedStars);
      if (el == null) {
        return;
      }
      el.css({
        scale: 4
      });
      this.addedStars++;
      return el.transition({
        opacity: 1,
        scale: 1
      }, animationsDelay, function() {
        _this.animatedStars++;
        if (_this.animatedStars === _this.starsCount) {
          return _this.starsAdded();
        }
      });
    };

    EndGameModal.prototype.starsAdded = function() {};

    return EndGameModal;

  })(BaseModal);

  module.exports = EndGameModal;

}).call(this);
