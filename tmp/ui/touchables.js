// Generated by CoffeeScript 1.6.1

/*
## Touchables

This module binds to the device-specific click event to add a .touch-active pseudo-class for
a set duration after triggering It's applied to the targeted selectors and used to customise visual
feedback when elemements are tapped
*/


(function() {
  var activeStateDuration, classNames, device, touchables;

  device = require('../core/device');

  touchables = 'a, .button, button, input, .touchable';

  classNames = {
    touchActive: 'touch-active'
  };

  activeStateDuration = 200;

  module.exports = {
    initialise: function() {
      return this.bind();
    },
    bind: function() {
      var self;
      self = this;
      return $('body').on(device.getEvent('click'), touchables, function() {
        return self.onClick($(this));
      });
    },
    onClick: function(element) {
      var _this = this;
      element.addClass(classNames.touchActive);
      return element.data('touchActiveTimer', setTimeout(function() {
        element.removeClass(classNames.touchActive);
        if (element.data('touchActiveTimer') != null) {
          return clearTimeout(element.data('touchActiveTimer'));
        }
      }, activeStateDuration));
    }
  };

}).call(this);
