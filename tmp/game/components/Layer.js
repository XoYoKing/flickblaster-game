// Generated by CoffeeScript 1.6.1
(function() {
  var Entity, Layer, device, renderer,
    _this = this;

  renderer = require('../../core/renderer');

  device = require('../../core/device');

  Entity = require('../items/Entity');

  /*
  ## Layer class
  
  A layer contains and handles groups of Entities
  It also provides the items a separate DOM element to render within, so than the order of display of
  all items is manageable
  
  It also takes care of their updating
  */


  Layer = (function() {

    function Layer(world, itemsType, id) {
      var _this = this;
      this.world = world;
      this.itemsType = itemsType;
      this.id = id;
      this.update = function() {
        return Layer.prototype.update.apply(_this, arguments);
      };
      this.add = function(options) {
        return Layer.prototype.add.apply(_this, arguments);
      };
      this.viewport = this.world.viewport;
      this.element = $(renderer.render('game-layer'));
      this.element.appendTo(this.viewport.el);
      this.items = [];
    }

    Layer.prototype.add = function(options) {
      var item;
      if (this.itemsType === 'entity') {
        item = new Entity(options, this);
      } else {
        return;
      }
      this.items.push(item);
      return item;
    };

    Layer.prototype.update = function() {
      var item, _i, _len, _ref, _results;
      _ref = this.items;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (!item.removed) {
          _results.push(item.update());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return Layer;

  })();

  module.exports = Layer;

}).call(this);
