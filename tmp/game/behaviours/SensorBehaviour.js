// Generated by CoffeeScript 1.6.1
(function() {
  var BaseActionableBehaviour, SensorBehaviour,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseActionableBehaviour = require('./BaseActionableBehaviour');

  /*
  ## Sensor Behaviours class
  
  Sensors execute an action specified through their 'action' attribute every time they're hovered by
  the player
  
  Read ActionableBehaviour for more
  */


  SensorBehaviour = (function(_super) {

    __extends(SensorBehaviour, _super);

    function SensorBehaviour(entity, world) {
      this.entity = entity;
      this.world = world;
      SensorBehaviour.__super__.constructor.apply(this, arguments);
      this.sprite = this.entity.sprites[0];
      this.light = this.sprite.decorators.light;
      (this.light.css({
        opacity: 0
      })).show();
    }

    SensorBehaviour.prototype.activate = function() {
      var _this = this;
      if (this.active) {
        return;
      }
      SensorBehaviour.__super__.activate.apply(this, arguments);
      return this.light.stop().transition({
        opacity: 1
      }, 50, function() {
        return _this.light.stop().transition({
          opacity: 0
        }, 500);
      });
    };

    return SensorBehaviour;

  })(BaseActionableBehaviour);

  module.exports = SensorBehaviour;

}).call(this);
