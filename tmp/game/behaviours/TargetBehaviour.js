// Generated by CoffeeScript 1.6.1
(function() {
  var BaseBehaviour, TargetBehaviour,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseBehaviour = require('./BaseBehaviour');

  /*
  ## Target Behaviour class
  
  Targets are holes the player has to aim to to win the game
  
  The pot logic is contained in PlayerBehaviour, this behaviour mainly shows effects on the target
  when hovered by the player
  */


  TargetBehaviour = (function(_super) {

    __extends(TargetBehaviour, _super);

    function TargetBehaviour(entity, world) {
      var _this = this;
      this.entity = entity;
      this.world = world;
      (_(this.entity)).on('hover', function() {
        return _this.lightsOn();
      });
      (_(this.entity)).on('release', function() {
        return _this.lightsOff();
      });
      this.lights = this.entity.sprites[0].getDecorator('lights');
      this.lights.show().css({
        opacity: 0
      });
    }

    TargetBehaviour.prototype.lightsOn = function() {
      return this.lights.stop().transition({
        opacity: 1
      }, 500);
    };

    TargetBehaviour.prototype.lightsOff = function() {
      return this.lights.stop().transition({
        opacity: 0
      }, 500);
    };

    TargetBehaviour.prototype.update = function() {};

    return TargetBehaviour;

  })(BaseBehaviour);

  module.exports = TargetBehaviour;

}).call(this);
