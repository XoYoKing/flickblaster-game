// Generated by CoffeeScript 1.6.1
(function() {
  var BaseView, device, renderer;

  renderer = require('./renderer');

  device = require('./device');

  /*
  ## Base View class
  
  Base class to extend from to create any view
  Takes care of basic rendering and defines mein methods
  */


  BaseView = (function() {

    function BaseView() {}

    BaseView.prototype.templateName = '';

    BaseView.prototype.fixHeight = false;

    BaseView.prototype.classNames = '';

    BaseView.prototype.context = {};

    BaseView.prototype.render = function(wrapper) {
      var rendered,
        _this = this;
      rendered = renderer.render("views/" + this.templateName, this.context);
      this.elements = {
        main: $("<div data-role='view' class='view " + this.classNames + "'>" + rendered + "</div>")
      };
      if (this.fixHeight) {
        this.elements.main.css({
          height: device.getSize().height,
          overflow: 'auto'
        });
      }
      this.getElements();
      if (wrapper != null) {
        this.elements.main.appendTo(wrapper);
      }
      this.resize();
      this.bind();
      $(window).on('resize', function() {
        return _this.resize();
      });
      return this;
    };

    BaseView.prototype.transitionComplete = function() {};

    BaseView.prototype.getElements = function() {};

    BaseView.prototype.bind = function() {};

    BaseView.prototype.resize = function() {};

    BaseView.prototype.close = function() {
      return this.elements.main.remove();
    };

    BaseView.prototype.hide = function() {
      return this.elements.main.hide();
    };

    BaseView.prototype.show = function() {
      this.elements.main.removeAttr('style');
      this.resize();
      return this.elements.main.show();
    };

    return BaseView;

  })();

  module.exports = BaseView;

}).call(this);
