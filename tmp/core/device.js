// Generated by CoffeeScript 1.6.1

/*
## Device module

* Provides information about the device and makes adjustments for testing if specified
* Maps all click events to equivalent touch events and provides them to UI modules
*/


(function() {
  var device, fakeSize, isMobile, isTouch, onResize, testSizes, touchEvents, useFakeSize, win;

  win = $(window);

  testSizes = {
    'galaxy-s3': [720, 1280, 2],
    'galaxy-s4': [1080, 1920, 3],
    'nexus-4': [768, 1280, 2],
    'iphone-4': [640, 920, 2],
    'iphone-5': [640, 1136, 2]
  };

  fakeSize = testSizes['iphone-5'];

  touchEvents = {
    click: "tap",
    mousedown: "touchstart",
    mousemove: "touchmove",
    mouseup: "touchend"
  };

  isMobile = window.navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry)/) ? true : false;

  isTouch = (_.has(document.documentElement, 'ontouchstart')) || (_.has(window, 'onmsgesturechange'));

  useFakeSize = (fakeSize != null) && !isMobile;

  device = {
    isMobile: isMobile,
    size: null,
    isTouch: isTouch,
    pixelRatio: window.devicePixelRatio || 1
  };

  onResize = function() {
    return device.size = {
      width: win.innerWidth(),
      height: win.innerHeight()
    };
  };

  win.on('resize', onResize);

  onResize();

  module.exports = {
    getPixelRatio: function() {
      return device.pixelRatio;
    },
    isTouch: function() {
      return device.isTouch;
    },
    getSize: function() {
      if (useFakeSize) {
        return {
          width: fakeSize[0] / fakeSize[2],
          height: fakeSize[1] / fakeSize[2]
        };
      }
      return device.size;
    },
    getEvent: function(evtType) {
      if (device.isTouch && (_.has(touchEvents, evtType))) {
        return touchEvents[evtType];
      } else {
        return evtType;
      }
    },
    getCenter: function() {
      return {
        x: device.size.width / 2,
        y: device.size.height / 2
      };
    }
  };

}).call(this);
